<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Assign_queue_members_to_Collection</name>
        <label>Assign queue members to Collection</label>
        <locationX>798</locationX>
        <locationY>2987</locationY>
        <assignmentItems>
            <assignToReference>Queuemembercollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Queue.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_SA_fields_to_colletion</name>
        <label>Assign SA fields to colletion</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>StoreSAFields</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Related_SA.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Null_check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Assign_SA_fields_to_colletion</name>
        <label>Copy 1 of Assign SA fields to colletion</label>
        <locationX>578</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>StoreSAFields</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Related_SA.Sales_Director__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CHek_MVP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_2_of_Assign_SA_fields_to_colletion</name>
        <label>Copy 2 of Assign SA fields to colletion</label>
        <locationX>578</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>StoreSAFields</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Related_SA.MarketVP__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_BPM</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_3_of_Assign_SA_fields_to_colletion</name>
        <label>Copy 3 of Assign SA fields to colletion</label>
        <locationX>578</locationX>
        <locationY>1355</locationY>
        <assignmentItems>
            <assignToReference>StoreSAFields</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Related_SA.Business_Performance_Manager__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_SA_Share</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SA_share_user_collection</name>
        <label>SA share user collection</label>
        <locationX>974</locationX>
        <locationY>1979</locationY>
        <assignmentItems>
            <assignToReference>Usercollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_SA_sharing.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_SA_sharing</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_BPM</name>
        <label>Check BPM</label>
        <locationX>710</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Get_SA_Share</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Null2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Related_SA.Business_Performance_Manager__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Related_SA.Business_Performance_Manager__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_3_of_Assign_SA_fields_to_colletion</targetReference>
            </connector>
            <label>Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_owner_is_user_or_queue</name>
        <label>Check if owner is user or queue</label>
        <locationX>710</locationX>
        <locationY>3263</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_is_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <label>Owner is User</label>
        </rules>
        <rules>
            <name>Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Owner_is_User</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>sharerecordsget</targetReference>
            </connector>
            <label>Owner is Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_record_exists</name>
        <label>Check if record exists</label>
        <locationX>798</locationX>
        <locationY>2555</locationY>
        <defaultConnector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>If_prior_owner_is_queue</targetReference>
            </connector>
            <label>new and If exists</label>
        </rules>
        <rules>
            <name>If_doesn_t_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Related_SA.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_SA_Share</targetReference>
            </connector>
            <label>New and If doesn&apos;t exist</label>
        </rules>
        <rules>
            <name>Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_3_of_Null_check</targetReference>
            </connector>
            <label>Update and if exists</label>
        </rules>
        <rules>
            <name>Update_and_if_doesn_t_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_3_of_Null_check</targetReference>
            </connector>
            <label>Update and if doesn&apos;t exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_If_SA_owner</name>
        <label>Check If SA owner</label>
        <locationX>1150</locationX>
        <locationY>2963</locationY>
        <defaultConnector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Related_SA.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Create_SA_Share</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_user_or_Queue</name>
        <label>Check if user or Queue</label>
        <locationX>710</locationX>
        <locationY>2339</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_user</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_SA_Share</targetReference>
            </connector>
            <label>If user</label>
        </rules>
        <rules>
            <name>If_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Members</targetReference>
            </connector>
            <label>If Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>CHek_MVP</name>
        <label>Check MVP</label>
        <locationX>710</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>Check_BPM</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Null1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Related_SA.MarketVP__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Related_SA.MarketVP__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_2_of_Assign_SA_fields_to_colletion</targetReference>
            </connector>
            <label>Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_Copy_3_of_Null_check</name>
        <label>Null check</label>
        <locationX>710</locationX>
        <locationY>2663</locationY>
        <defaultConnector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_Copy_3_of_If_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.Sales_Director__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.MarketVP__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.Business_Performance_Manager__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_prior_owner_sharing</targetReference>
            </connector>
            <label>Copy 1 of Copy 3 of If not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_null_check</name>
        <label>Copy 1 of null check</label>
        <locationX>798</locationX>
        <locationY>3563</locationY>
        <defaultConnector>
            <targetReference>Loop_SA_Share</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Copy_1_of_Share_records_get</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Delete_previous_share</targetReference>
            </connector>
            <label>Copy 1 of not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_3_of_Null_check</name>
        <label>Null check</label>
        <locationX>1150</locationX>
        <locationY>2663</locationY>
        <defaultConnector>
            <targetReference>Check_If_SA_owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_3_of_If_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_Share.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.Sales_Director__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.MarketVP__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sales_Agreement__r.Business_Performance_Manager__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Delete_prior_owner_sharing</targetReference>
            </connector>
            <label>Copy 3 of If not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_prior_owner_is_queue</name>
        <label>If prior owner is queue</label>
        <locationX>798</locationX>
        <locationY>3347</locationY>
        <defaultConnector>
            <targetReference>Loop_SA_Share</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_nothing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_SA_Share</targetReference>
            </connector>
            <label>Do nothing</label>
        </rules>
        <rules>
            <name>delete_previous_sharing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Do_nothing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Share_records_get</targetReference>
            </connector>
            <label>delete previous sharing</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_User_already_Present</name>
        <label>If User already Present</label>
        <locationX>886</locationX>
        <locationY>1871</locationY>
        <defaultConnector>
            <targetReference>SA_share_user_collection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>StoreSAFields</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Loop_SA_sharing.UserOrGroupId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_SA_sharing</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_check</name>
        <label>Null check</label>
        <locationX>710</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>CHek_MVP</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Sales_director</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Related_SA.Sales_Director__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Related_SA.Sales_Director__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Assign_SA_fields_to_colletion</targetReference>
            </connector>
            <label>Check Sales director</label>
        </rules>
    </decisions>
    <decisions>
        <name>null_check_for_active_users</name>
        <label>null check for active users</label>
        <locationX>930</locationX>
        <locationY>2771</locationY>
        <defaultConnector>
            <targetReference>Loop_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>not active</defaultConnectorLabel>
        <rules>
            <name>active_user</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_user_record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_user_record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_2_of_Create_SA_Share</targetReference>
            </connector>
            <label>active user</label>
        </rules>
    </decisions>
    <decisions>
        <name>null_checking</name>
        <label>null check</label>
        <locationX>710</locationX>
        <locationY>3479</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sharerecordsget</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_previous_share</targetReference>
            </connector>
            <label>not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Only_Users_not_groups</name>
        <label>Only Users not groups</label>
        <locationX>1062</locationX>
        <locationY>1763</locationY>
        <defaultConnector>
            <targetReference>Loop_SA_sharing</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Add_users</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_SA_sharing.UserOrGroupId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>If_User_already_Present</targetReference>
            </connector>
            <label>Add users</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>Caseownerqueue</name>
        <dataType>String</dataType>
        <expression>{!$Record.Owner:Group.Id}</expression>
    </formulas>
    <interviewLabel>Update Case reference on SA {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Case ID on SA and Create owner share</label>
    <loops>
        <name>Loop_Queue</name>
        <label>Loop Queue</label>
        <locationX>710</locationX>
        <locationY>2555</locationY>
        <collectionReference>Get_Queue_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_user_record</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_if_owner_is_user_or_queue</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_SA_Share</name>
        <label>Loop SA Share</label>
        <locationX>50</locationX>
        <locationY>2447</locationY>
        <collectionReference>Get_SA_Share</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_record_exists</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <name>Loop_SA_sharing</name>
        <label>Loop SA share</label>
        <locationX>710</locationX>
        <locationY>1655</locationY>
        <collectionReference>Get_SA_Share</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Only_Users_not_groups</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_if_user_or_Queue</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Copy_1_of_Create_SA_Share</name>
        <label>Copy 1 of Create SA Share</label>
        <locationX>1018</locationX>
        <locationY>3071</locationY>
        <connector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </connector>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>Get_Related_SA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Copy_2_of_Create_SA_Share</name>
        <label>Create SA Share</label>
        <locationX>798</locationX>
        <locationY>2879</locationY>
        <connector>
            <targetReference>Assign_queue_members_to_Collection</targetReference>
        </connector>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>Get_Related_SA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>Loop_Queue.UserOrGroupId</elementReference>
            </value>
        </inputAssignments>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_SA_Share</name>
        <label>Create SA Share</label>
        <locationX>314</locationX>
        <locationY>2663</locationY>
        <connector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </connector>
        <inputAssignments>
            <field>AccessLevel</field>
            <value>
                <stringValue>Read</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>Get_Related_SA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Copy_1_of_Delete_previous_share</name>
        <label>Copy 1 of Delete previous share</label>
        <locationX>666</locationX>
        <locationY>3671</locationY>
        <connector>
            <targetReference>Loop_SA_Share</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>StoreSAFields</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>Usercollection</elementReference>
            </value>
        </filters>
        <object>SalesAgreementShare</object>
    </recordDeletes>
    <recordDeletes>
        <name>Copy_1_of_Delete_prior_owner_sharing</name>
        <label>Copy 1 of Delete prior owner sharing</label>
        <locationX>1018</locationX>
        <locationY>2771</locationY>
        <connector>
            <targetReference>Check_If_SA_owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_SA_Share.UserOrGroupId</elementReference>
            </value>
        </filters>
        <object>SalesAgreementShare</object>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_previous_share</name>
        <label>Delete previous share</label>
        <locationX>578</locationX>
        <locationY>3587</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>Queuemembercollection</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>StoreSAFields</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>Usercollection</elementReference>
            </value>
        </filters>
        <object>SalesAgreementShare</object>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_prior_owner_sharing</name>
        <label>Delete prior owner sharing</label>
        <locationX>578</locationX>
        <locationY>2771</locationY>
        <connector>
            <targetReference>If_prior_owner_is_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_SA_Share.UserOrGroupId</elementReference>
            </value>
        </filters>
        <object>SalesAgreementShare</object>
    </recordDeletes>
    <recordLookups>
        <description>Adding this just so to avoid error if there are no records to be deleted</description>
        <name>Copy_1_of_Share_records_get</name>
        <label>Share records get</label>
        <locationX>798</locationX>
        <locationY>3455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_null_check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>StoreSAFields</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>Usercollection</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Members</name>
        <label>Get Queue Members</label>
        <locationX>710</locationX>
        <locationY>2447</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__r.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>GroupId</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Related_SA</name>
        <label>Get Related SA</label>
        <locationX>710</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_SA_fields_to_colletion</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SalesAgreement</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_SA_Share</name>
        <label>Get SA Share</label>
        <locationX>710</locationX>
        <locationY>1547</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_SA_sharing</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Related_SA.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_record</name>
        <label>Get user record</label>
        <locationX>930</locationX>
        <locationY>2663</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>null_check_for_active_users</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Queue.UserOrGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Adding this just so to avoid error if there are no records to be deleted</description>
        <name>sharerecordsget</name>
        <label>Share records get</label>
        <locationX>710</locationX>
        <locationY>3371</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>null_checking</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>Queuemembercollection</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>NotIn</operator>
            <value>
                <elementReference>StoreSAFields</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>Usercollection</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SalesAgreementShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_related_SAP</name>
        <label>Update related SAP</label>
        <locationX>710</locationX>
        <locationY>323</locationY>
        <connector>
            <targetReference>Get_Related_SA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Sales_Agreement_Product__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Case_Reference_ID__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>case_number__c</field>
            <value>
                <elementReference>$Record.CaseNumber</elementReference>
            </value>
        </inputAssignments>
        <object>SalesAgreementProduct</object>
    </recordUpdates>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Update_related_SAP</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0121l000000CI0RAAW</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Sales_Agreement__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Sales_Agreement_Product__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Queuemembercollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>StoreSAFields</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>Usercollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
